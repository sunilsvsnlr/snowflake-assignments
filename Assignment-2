--PIPELINE STREAM AND TASK
CREATE OR REPLACE TABLE STAGING_PATIENTRECORDS(
PATIENTID INT IDENTITY(1,1),
NAME VARCHAR,
AGE INT,
DIAGNOSIS VARCHAR,
MEDICALHISTORY VARIANT,
ADMISSIONDATE DATE DEFAULT NULL,
DISCHARGEDATE DATE DEFAULT NULL,
STATUS VARCHAR
);

INSERT INTO STAGING_PATIENTRECORDS (PATIENTID, NAME, AGE, DIAGNOSIS, MEDICALHISTORY, ADMISSIONDATE, DISCHARGEDATE, STATUS) VALUES
(1, 'Vikram', '36', 'Cold', NULL, '2024-11-05','2024-11-15', 'IN'),
(2, 'Arun', '36', 'Cough', NULL, '2024-11-05','2024-11-15', 'IN')

CREATE STREAM STAGING_PATIENTRECORDS_STREAM ON TABLE STAGING_PATIENTRECORDS;

SELECT *FROM STAGING_PATIENTRECORDS;
SELECT *FROM STAGING_PATIENTRECORDS_STREAM;

INSERT INTO STAGING_PATIENTRECORDS (PATIENTID, NAME, AGE, DIAGNOSIS, MEDICALHISTORY, ADMISSIONDATE, DISCHARGEDATE, STATUS) VALUES
(1, 'SURYA', '38', 'Fever', NULL, '2024-11-05','2024-11-15', 'IN');

SELECT *FROM STAGING_PATIENTRECORDS_STREAM;

CREATE OR REPLACE TABLE FINAL_PATIENTRECORDS(DIAGNOSIS STRING, PATIENTRECORDS INT);

CREATE OR REPLACE TASK FINAL_PATIENTRECORDS_TASK
WAREHOUSE = 'COMPUTE_WH' 
SCHEDULE='2 MINUTE'
WHEN SYSTEM$STREAM_HAS_DATA('STAGING_PATIENTRECORDS_STREAM')
AS INSERT INTO FINAL_PATIENTRECORDS 
SELECT DIAGNOSIS, COUNT(*) AS PATIENTCOUNT FROM STAGING_PATIENTRECORDS_STREAM 
WHERE METADATA$ACTION='INSERT'
GROUP BY DIAGNOSIS;

ALTER TASK FINAL_PATIENTRECORDS_TASK RESUME;
ALTER TASK FINAL_PATIENTRECORDS_TASK SUSPEND; --FINALLY RUN TASK TO SUSPEND. IF NOT IT WILL RUN CONTINOUSLY CREDITS WILL LOST

SELECT *FROM STAGING_PATIENTRECORDS_STREAM;
SELECT *FROM FINAL_PATIENTRECORDS;

--CLUSTERING TASK
create or replace TABLE HEALTHCAREDB.PATIENT.PATIENTRECORDS (
	PATIENTID NUMBER IDENTITY(1,1),
	NAME VARCHAR,
	AGE NUMBER,
	DIAGNOSIS VARCHAR,
	MEDICALHISTORY VARIANT,
	ADMISSIONDATE DATE,
	DISCHARGEDATE DATE,
	STATUS VARCHAR
);

INSERT INTO PATIENTRECORDS (PATIENTID, NAME, AGE, DIAGNOSIS, MEDICALHISTORY, ADMISSIONDATE, DISCHARGEDATE, STATUS) VALUES
(1, 'Vikram', '36', 'Cold', NULL, '2024-11-05','2024-11-15', 'IN'),
(2, 'Arun', '36', 'Cough', NULL, '2024-11-05','2024-11-15', 'IN');

SELECT DIAGNOSIS, COUNT(*) AS PATIENTCOUNT FROM PATIENTRECORDS WHERE ADMISSIONDATE > '2024-10-05' GROUP BY DIAGNOSIS;

ALTER TABLE PATIENTRECORDS CLUSTER BY (ADMISSIONDATE);

SELECT DIAGNOSIS, COUNT(*) AS PATIENTCOUNT FROM PATIENTRECORDS WHERE ADMISSIONDATE > '2024-10-05' GROUP BY DIAGNOSIS;
